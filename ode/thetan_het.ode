# n excitatory, n inhibitory theta neurons
# 

# get table data from lorentz.py

#table eta1 eta1_N=300.tab
#table eta2 eta2_N=300.tab

#x[0..299]'=((1-cos(x[j]))+(1+cos(x[j]))*(a1+eps*eta1([j])+b1*sx-c1*sy))*pi
#y[0..299]'=((1-cos(y[j]))+(1+cos(y[j]))*(a2+eps*eta2([j])+b2*sx-c2*sy))*pi

x[0..3]'=((1-cos(x[j]))+(1+cos(x[j]))*(a1+b1*sx-c1*sy))*pi
y[0..3]'=((1-cos(y[j]))+(1+cos(y[j]))*(a2+b2*sx-c2*sy))*pi

#f1=sqrt()
#f2=sqrt()

#p1=1/f1
#p2=1/f2

sx'=-eps*sx/mux
sy'=-eps*sy/muy

global 1 x[0..3]-pi {x[j]=-pi;sx=sx+eps/(n*mux)}
global 1 y[0..3]-pi {y[j]=-pi;sy=sy+eps/(n*muy)}

# get phase values
#phx[0..1]=mod(atan(tan(x[j]/2)/f1)/(f1*pi)+p1/2,p1)-p1/2
#phy[0..1]=mod(atan(tan(y[j]/2)/f2)/(f2*pi)+p2/2,p2)-p2/2

#diffx=mod(phx1-phx0+p1/2,p1)-p1/2
#diffy=mod(phy1-phy0+p2/2,p2)-p2/2

init sx=1,sy=1.03
x[0..3](0)=ran(1)*2*pi-pi
y[0..3](0)=ran(1)*2*pi-pi


#p a1=2,b1=5,c1=1
#p a2=2,b2=5,c2=1

p a1=.5,b1=7,c1=6.5
p a2=1.1,b2=25,c2=25.1
p n=3

p mux=1,muy=1
p eps=.01

@ seed=1
@ dt=.01
@ total=1000
@ xp=sx,yp=sy
@ xlo=.9,xhi=1.1
@ ylo=.9,yhi=1.1